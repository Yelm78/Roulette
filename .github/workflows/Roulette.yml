name: .NET

on:
    push:
        branches: [master]

jobs:
    build:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v3
            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                 dotnet-version: ${{ env.DOTNET_VERSION }}        
            - name: Install dependencies
              run: dotnet restore
            - name: Build
              run: |
                  cd DotNet.WebApp
                  dotnet build --configuration Release --no-restore
                  dotnet publish -c Release -o ../dotnet-webapp -r linux-x64 --self-contained true /p:UseAppHost=true
            - name: Upload Artifacts
              uses: actions/upload-artifact@v2
              with:
                  name: Roulette
                  path: ./bin\Release\net8.0-windows7.0\publish\win-x86
            - uses: Klemensas/action-autotag@stable
              id: autotag
              with:
                  GITHUB_TOKEN: "${{ secrets.TOKEN }}"
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  tag_name: ${{ steps.autotag.outputs.tagname }}
                  release_name: Roulette v${{ steps.autotag.outputs.tagname }} Release
                  body: |
                      publish
                  draft: false
                  prerelease: false
            - name: ZIP Arhcive using powershell
              shell: powershell
              run: |
                  [Reflection.Assembly]::LoadWithPartialName("System.IO.Compression.FileSystem")
                  $Compression = [System.IO.Compression.CompressionLevel]::Optimal
                  $IncludeBaseDirectory = $false

                  $Source = "bin/Release/net8.0-windows7.0/publish/win-x86"
                  $Destination = "Roulette.zip"

                  [System.IO.Compression.ZipFile]::CreateFromDirectory($Source,$Destination,$Compression,$IncludeBaseDirectory)
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./Roulette.zip
                  asset_name: Roulette.zip
                  asset_content_type: application/zip
